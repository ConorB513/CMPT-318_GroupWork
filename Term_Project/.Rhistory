theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2)  # Border around the entire plot
)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)), vjust = -0.5, size = 3) + # Text labels
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
plot.background = element_rect(color = "black", fill = "white", size = 2)  # Border around the entire plot
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)), vjust = -0.5, size = 3) + # Text labels
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10)  # Adds space around the plot
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)), vjust = -0.5, size = 3) + # Text labels
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2)  # Border around the entire plot
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)), vjust = -1, size = 3) + # Increased distance for text labels
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.2, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = 0, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = 0.2, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = 0.2, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = 2, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot using ggplot2
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.6, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.1, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.15, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 50, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 50, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 15, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 10, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 5, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = Period),              # Label each point with its Period number
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) +
annotate("text", x = 5, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +  # Axis labels
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 5, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
ggplot(data, aes(x = Period, y = Normalized_LL)) +
geom_line(color = "black") +                # Line plot
geom_point(color = "black", size = 3) +     # Points on the line
geom_text(aes(label = round(Normalized_LL, 3)),
hjust = -0.25, vjust = 0, size = 3) + # Align labels to the left of the points
geom_hline(yintercept = -1.85, color = "blue", linetype = "dashed", size = 1.2) +  # Horizontal line
labs(title = "Normalized Log-Likelihood Values Across 2009 Periods",
x = "Period", y = "Normalized Log-Likelihood") +
scale_x_continuous(breaks = 1:10) +
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 5, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "skyblue") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "red", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation (Absolute Difference)") +  # Axis labels
theme_minimal() +  # Minimal theme for better appearance
theme(plot.margin = margin(10, 10, 10, 10)) # Adds space around the plot
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
# Create a data frame with Period, Date Range, Value, and Deviation
data <- data.frame(Period = 1:10, DateRange = date_ranges, Value = values, Deviation = deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
# Create a data frame with Period (index), Value, and Deviation
data <- data.frame(Period = 1:length(normalizedLogLikelihoodValues),
Value = normalizedLogLikelihoodValues,
Deviation = deviations)
# Find the period with the largest deviation
max_deviation_period <- data$Period[which.max(data$Deviation)]
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "skyblue") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "red", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation (Absolute Difference)") +  # Axis labels
theme_minimal() +  # Minimal theme for better appearance
theme(plot.margin = margin(10, 10, 10, 10)) # Adds space around the plot
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
# Create a data frame with Period (index), Value, and Deviation
data <- data.frame(Period = 1:length(normalizedLogLikelihoodValues),
Value = normalizedLogLikelihoodValues,
Deviation = deviations)
# Find the period with the largest deviation
max_deviation_period <- data$Period[which.max(data$Deviation)]
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "black") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "red", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
theme_minimal() +  # Minimal theme for better appearance
theme(plot.margin = margin(10, 10, 10, 10)) # Adds space around the plot
max_deviation_period <- max(deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
# Create a data frame with Period (index), Value, and Deviation
data <- data.frame(Period = 1:length(normalizedLogLikelihoodValues),
Value = normalizedLogLikelihoodValues,
Deviation = deviations)
# Find the period with the largest deviation
max_deviation_period <- data$Period[which.max(data$Deviation)]
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "green") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
theme_minimal() +  # Minimal theme for better appearance
theme(plot.margin = margin(10, 10, 10, 10)) # Adds space around the plot
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
# Create a data frame with Period (index), Value, and Deviation
data <- data.frame(Period = 1:length(normalizedLogLikelihoodValues),
Value = normalizedLogLikelihoodValues,
Deviation = deviations)
# Find the period with the largest deviation
max_deviation_period <- data$Period[which.max(data$Deviation)]
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "lightgrey") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
theme_minimal() +  # Minimal theme for better appearance
theme(plot.margin = margin(10, 10, 10, 10)) # Adds space around the plot
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
max_deviation_period <- max(deviations)
deviations <- abs(-1.85 - normalizedLogLikelihoodValues)
# Create a data frame with Period (index), Value, and Deviation
data <- data.frame(Period = 1:length(normalizedLogLikelihoodValues),
Value = normalizedLogLikelihoodValues,
Deviation = deviations)
# Find the period with the largest deviation
max_deviation_period <- data$Period[which.max(data$Deviation)]
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "lightgrey") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
scale_x_continuous(breaks = 1:10) +
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
) + annotate("text", x = 5, y = -2, label = "Training Log-Likelihood (-1.85)",
color = "blue", size = 4, fontface = "italic", hjust = 0, vjust = 1)
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "lightgrey") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
scale_x_continuous(breaks = 1:10) +
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "lightgrey") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), hjust = -0.3, vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from -1.85 for Each Period",
x = "Period", y = "Deviation ") +  # Axis labels
scale_x_continuous(breaks = 1:10) +
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
# Create the plot
library(ggplot2)
ggplot(data, aes(x = Period, y = Deviation)) +
geom_bar(stat = "identity", fill = "lightgrey") +               # Bar plot for deviations
geom_point(aes(x = Period, y = Deviation), color = "black", size = 3) + # Points for each period
geom_text(aes(label = round(Deviation, 3)), hjust = -0.3, vjust = -0.5, size = 3) +  # Deviation labels
geom_vline(xintercept = max_deviation_period, color = "black", linetype = "dashed", size = 1) +  # Line for max deviation
labs(title = "Deviation from Training Likelihood",
x = "Period", y = "Deviation ") +  # Axis labels
scale_x_continuous(breaks = 1:10) +
theme(
plot.margin = margin(10, 10, 10, 10),  # Adds space around the plot
panel.border = element_rect(color = "black", fill = NA, size = 1),  # Adds border around the plot panel
plot.background = element_rect(color = "black", fill = "white", size = 2),  # Border around the entire plot
panel.background = element_blank()  # Removes the shaded background
)
for (states in 18:18) {
cat("\n--- Training HMM with", states, "states ---\n")
# Define the HMM model with 3 response variables
model <- depmix(response = list(PC1 ~ 1, PC2 ~ 1),
data = trainingData_discrete,
family = list(multinomial(), multinomial()),
nstates = states,
ntimes = ntimes_val)
# Fit the model, increase EM iterations, tighten convergence tolerance
fitModel <- fit(model, emcontrol = em.control(maxit = 1000, tol = 1e-8))
summary(fitModel)
# Store results
training_results[[as.character(states)]] <- list(
logLik = logLik(fitModel),
BIC = BIC(fitModel),
summary = summary(fitModel)
)
for (states in 18:18) {
cat("\n--- Training HMM with", states, "states ---\n")
# Define the HMM model with 3 response variables
model <- depmix(response = list(PC1 ~ 1, PC2 ~ 1),
data = trainingData_discrete,
family = list(multinomial(), multinomial()),
nstates = states,
ntimes = ntimes_val)
# Fit the model, increase EM iterations, tighten convergence tolerance
fitModel <- fit(model, emcontrol = em.control(maxit = 1000, tol = 1e-8))
summary(fitModel)
# Store results
training_results[[as.character(states)]] <- list(
logLik = logLik(fitModel),
BIC = BIC(fitModel),
summary = summary(fitModel)
)
print("1")
